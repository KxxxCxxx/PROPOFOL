/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.16
 * Generated at: 2019-04-19 04:07:50 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class main_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.3.1.min.js\"></script>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write(".port {\r\n");
      out.write("\twidth: 23%;\r\n");
      out.write("\theight: 200px;\r\n");
      out.write("\tpadding: 10px;\r\n");
      out.write("\tfloat: left;\r\n");
      out.write("\tcolor: white;\r\n");
      out.write("\tcursor: pointer;\r\n");
      out.write("}\r\n");
      out.write(".port:hover{\r\n");
      out.write("\tfilter: grayscale(80%);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".port img {\r\n");
      out.write("\tposition: relative;\r\n");
      out.write("\ttop: 0;\r\n");
      out.write("\tleft: 0;\r\n");
      out.write("\twidth:300px;\r\n");
      out.write("\theight:200px;\r\n");
      out.write("\talign-items: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#detail {\r\n");
      out.write("\tdisplay: none;\r\n");
      out.write("\twidth: 30%;\r\n");
      out.write("\tborder: solid blue 1px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#portDetail {\r\n");
      out.write("\tdisplay: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#portDetail.open {\r\n");
      out.write("\tbackground-attachment: scroll;\r\n");
      out.write("\tbackground-clip: border-box;\r\n");
      out.write("\tbackground-color: rgb(6, 6, 6);\r\n");
      out.write("\tbackground-origin: padding-box;\r\n");
      out.write("\tpadding-top: 20px;\r\n");
      out.write("\tpadding-left: 20px;\r\n");
      out.write("\tpadding-right: 20px; \r\n");
      out.write("\twidth : 1000px;\r\n");
      out.write("\tdisplay: block;\r\n");
      out.write("\toverflow: auto;\r\n");
      out.write("\tposition: relative;\r\n");
      out.write("\tposition: absolute;\r\n");
      out.write("\tleft: 50%;\r\n");
      out.write("\ttop: 50%;\r\n");
      out.write("\tmargin-left: -500px;\r\n");
      out.write("\tmargin-top: -300px;\r\n");
      out.write("\tborder: #000 solid 1px;\r\n");
      out.write("\tcolor: white;\r\n");
      out.write("\tz-index: 1;\r\n");
      out.write("\twidth: 1000px\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#outport{\r\n");
      out.write("\tcolor: white;\r\n");
      out.write("\talign-content: center;\r\n");
      out.write("\t/* float:right;  */\r\n");
      out.write("\tfont-weight: bold;\r\n");
      out.write("\tcursor: pointer;\r\n");
      out.write("\tfont-size: 15px;\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\tfloat: right;\r\n");
      out.write("}\r\n");
      out.write("#outport:hover {\r\n");
      out.write("\tbackground: -webkit-gradient(linear, left top, left bottom, color-stop(0.05, #0688fa\r\n");
      out.write("\t\t), color-stop(1, #43b1f0));\r\n");
      out.write("\tbackground: -moz-linear-gradient(top, #0688fa 5%, #43b1f0 100%);\r\n");
      out.write("\tbackground: -webkit-linear-gradient(top, #0688fa 5%, #43b1f0 100%);\r\n");
      out.write("\tbackground: -o-linear-gradient(top, #0688fa 5%, #43b1f0 100%);\r\n");
      out.write("\tbackground: -ms-linear-gradient(top, #0688fa 5%, #43b1f0 100%);\r\n");
      out.write("\tbackground: linear-gradient(to bottom, #0688fa 5%, #43b1f0 100%);\r\n");
      out.write("\tfilter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#0688fa',\r\n");
      out.write("\t\tendColorstr='#43b1f0', GradientType=0);\r\n");
      out.write("}\r\n");
      out.write(".like{\r\n");
      out.write("\tcursor: pointer;\r\n");
      out.write("}\r\n");
      out.write(".like:hover{\r\n");
      out.write("\tcolor: gray;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div id=\"detail\"></div>\r\n");
      out.write("\t<hr>\r\n");
      out.write("\t<div id=\"portDiv\"></div>\r\n");
      out.write("\t<br>\r\n");
      out.write("\t<div id=\"portDetail\"></div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("console.log(");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${newPortFolio}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(");\r\n");
      out.write("$(function name() {\t\r\n");
      out.write("\tvar data=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${newPortFolio}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\r\n");
      out.write("\tvar rs = \"\";\r\n");
      out.write("\tvar ds = \"\";\r\n");
      out.write("\tfor ( var i=0; i<data.length; i++) {\r\n");
      out.write("\t\trs+=\"<div class='port' onclick=\\\"detail('\" + data[i].p_Thumbnail + \"')\\\">\"\t\r\n");
      out.write("\t\t+\"<img src='upload/\"+data[i].p_Thumbnail+\"' width='200'>\"\r\n");
      out.write("\t\t+\"</div>\";\r\n");
      out.write("\t}\r\n");
      out.write("\t$(\"#portDiv\").html(rs);\r\n");
      out.write("});\r\n");
      out.write("function out() {\r\n");
      out.write("\t$('#portDetail').removeClass('open');\r\n");
      out.write("}\r\n");
      out.write("function nomLike(p_Number) {\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\turl : 'nomLike',\r\n");
      out.write("\t\ttype : 'get',\r\n");
      out.write("\t\tdata : {\r\n");
      out.write("\t\t\tp_Number : p_Number\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\tdataType : \"json\",\r\n");
      out.write("\t\tsuccess : function(datac) {\r\n");
      out.write("\t\t\t$(\"#nomSpan\").html(datac)\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\terror : function(error) {\r\n");
      out.write("\t\t\tconsole.log(error);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("}\r\n");
      out.write("function comLike(p_Number) {\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\turl : 'comLike',\r\n");
      out.write("\t\ttype : 'get',\r\n");
      out.write("\t\tdata : {\r\n");
      out.write("\t\t\tp_Number : p_Number\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\tdataType : \"json\",\r\n");
      out.write("\t\tsuccess : function(datae) {\r\n");
      out.write("\t\t\t$(\"#comSpan\").html(datae)\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\terror : function(error) {\r\n");
      out.write("\t\t\tconsole.log(error);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("}\r\n");
      out.write("function detail(p_Thumbnail) {\r\n");
      out.write("\t\r\n");
      out.write("\t$('#portDetail').addClass('open');\r\n");
      out.write("\t//$('#detail').addClass('open');\r\n");
      out.write("\t//$('#detail').toggle();/*show()<---->hide() */\r\n");
      out.write("\t$('html').css('filter','blur(direction:90,strength:20)');\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\turl : 'ajaxDetail', //ajaxDetail?p_code='+pcode 쿼리스트링으로 파라미터 가져가기\r\n");
      out.write("\t\ttype : 'get',\r\n");
      out.write("\t\tdata : {\r\n");
      out.write("\t\t\tp_Thumbnail : p_Thumbnail\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\tdataType : \"json\",\r\n");
      out.write("\t\tsuccess : function(datas) {\r\n");
      out.write("\t\t\tconsole.log(datas);\r\n");
      out.write("\t\t\tvar str=\"\";\r\n");
      out.write("\t\t\t\tstr=\"<a id='outport' onclick='out()'>&nbsp;x&nbsp;</a><br><br>\"\r\n");
      out.write("\t\t\t\t+\"<a class='like' id='nlike' onclick=\\\"nomLike('\"+datas.p_Number+\"')\\\">일반좋아요</a>&nbsp;\"\r\n");
      out.write("\t\t\t\t+\"<span id='nomSpan'>\"+datas.p_LikeCount+\"</span><br><br>\"\r\n");
      out.write("\t\t\t\t+\"<a class='like' id='clike' onclick=\\\"comLike('\"+datas.p_Number+\"')\\\">기업좋아요</a>&nbsp;\"\r\n");
      out.write("\t\t\t\t+\"<span id='comSpan'>\"+datas.p_comLikeCount+\"</span><br><br>\"\r\n");
      out.write("\t\t\t\t+\"포트폴리오 작성자&nbsp;:&nbsp;\"+datas.p_Id+\"<br><br>\"\r\n");
      out.write("\t\t\t\t+\"포트폴리오 작성일&nbsp;:&nbsp;\"+datas.p_Date+\"<br><br>\"\r\n");
      out.write("\t\t\t\t+\"포트폴리오 타이틀&nbsp;:&nbsp;\"+datas.p_Title+\"<br><br>\"\r\n");
      out.write("\t\t\t\t+datas.p_Content+\"<br>\"\r\n");
      out.write("\t\t\t$(\"#portDetail\").html(str);\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\terror : function(error) {\r\n");
      out.write("\t\t\tconsole.log(error);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
